[
// -- top row
{
    "key": "ctrl+e",
    "command": "type",
    "args": { "text": "'" },
    "when": "editorTextFocus"
},
{
    "key": "ctrl+r",
    "command": "type",
    "args": { "text": "\"" },
    "when": "editorTextFocus"
},


{
    "key": "ctrl+u",
    "command": "type",
    "args": { "text": "::" },
    "when": "editorTextFocus"
},
{
    "key": "ctrl+i",
    "command": "type",
    "args": { "text": "<<" },
    "when": "editorTextFocus"
},
{
    "key": "ctrl+o",
    "command": "type",
    "args": { "text": ">>" },
    "when": "editorTextFocus"
},  
// -- middle row
{
    "key": "ctrl+a",
    "command": "type",
    "args": { "text": "[" },
    "when": "editorTextFocus"
},
{
    "key": "ctrl+s",
    "command": "-workbench.action.files.save"
},
{
    "key": "ctrl+s",
    "command": "type",
    "args": { "text": "<"},
    "when": "editorTextFocus"
},
{
    "key": "ctrl+d",
    "command": "type",
    "args": { "text": "{" },
    "when": "editorTextFocus"
},
{
    "key": "ctrl+f",
    "command": "type",
    "args": { "text": "(" },
    "when": "editorTextFocus"
},
{
    "key": "ctrl+g",
    "command": "editor.action.jumpToBracket",
    "when": "editorTextFocus"
},
{
    "key": "ctrl+h",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
},
{
    "key": "ctrl+j",
    "command": "deleteLeft",
    "when": "textInputFocus"
},
{
    "key": "ctrl+;",
    "command": "type",
    "args": { "text": ":"},
    "when": "editorTextFocus"
},
// -- last row
{
    "key": "ctrl+z",
    "command": "undo"
},
{
    "key": "ctrl+shift+z",
    "command": "redo"
},
{
  "key": "ctrl+x",
  "command": "editor.action.clipboardCutAction"
},
{
  "key": "ctrl+c",
  "command": "editor.action.clipboardCopyAction"
},
{
  "key": "ctrl+v",
  "command": "editor.action.clipboardPasteAction"
},
{
    "key": "ctrl+,",
    "command" : "cursorHome",
    "when": "editorTextFocus"
},
{
    "key": "ctrl+.",
    "command": "cursorEnd",
    "when": "editorTextFocus"
},
// -- numpad
{
    "key": "ctrl+numpad_subtract",
    "command": "workbench.action.files.save"
},
{
    "key": "ctrl+numpad_multiply",
    "command": "actions.find",
    "when": "editorFocus || editorIsOpen"
},
{
    "key": "ctrl+numpad_divide",
    "command": "editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
},
// --
{
    "key" : "alt+right",
    "command" : "cursorEnd"
},
{
    "key" : "alt+left",
    "command" : "cursorHome"
},
{
    "key": "alt+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
},
{
    "key": "alt+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
},
{
    "key": "shift+alt+up",
    "command": "editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
},
{
    "key": "shift+alt+down",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
},

{
    "key": "ctrl+shift+space",
    "command": "editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
},
{
    "key": "ctrl+space",
    "command": "type",
    "args": { "text": "\n" },
    "when": "editorTextFocus"
},

{
    "key": "ctrl+shift+enter",
    "command": "editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
},
{
    "key": "ctrl+enter",
    "command": "editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
},
// -- Arrow keys
{
    "key": "alt+i",
    "command": "cursorUp",
    "when": "textInputFocus"
},
{
    "key": "alt+k",
    "command": "cursorDown",
    "when": "textInputFocus"
},
{
    "key": "alt+j",
    "command": "cursorLeft",
    "when": "textInputFocus"
},
{
    "key": "alt+l",
    "command": "cursorRight",
    "when": "textInputFocus"
},
// -- GitHub Copilot
{
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
},
{
    "key": "ctrl+n",
    "command": "editor.action.inlineSuggest.acceptNextLine"
},
{
    "key": "alt+n",
    "command": "editor.action.inlineSuggest.trigger"
},


{
    "key": "ctrl+numpad0",
    "command": "-workbench.action.zoomReset"
},
{
    "key": "ctrl+numpad0",
    "command": "github.copilot.generate"
},
{
    "key": "ctrl+numpad3",
    "command": "github.copilot.nextPanelSolution"
},
{
    "key": "ctrl+numpad2",
    "command": "github.copilot.acceptCursorPanelSolution"
},
{
    "key": "ctrl+numpad1",
    "command": "github.copilot.previousPanelSolution"
},

{
    "key": "ctrl+right",
    "command": "editor.action.inlineSuggest.acceptNextWord",
    "when": "inlineSuggestionVisible && !editorReadonly"
},
// -- Debug
{
    "key": "alt+shift+i",
    "command": "editor.action.inspectTMScopes"
},
{
    "key": "ctrl+shift+p",
    "command": "workbench.action.showCommands"
},
// --
{
    "key": "tab",
    "command": "tab",
    "when": "editorTextFocus"
},
{
    "key": "ctrl+numpad9",
    "command": "editor.action.selectAll"
},
{
  "key": "ctrl+pageup",
  "command": "workbench.action.previousEditor"
},
{
  "key": "ctrl+pagedown",
  "command": "workbench.action.nextEditor"
},
{
    "key": "ctrl+f9",
    "command": "editor.action.toggleWordWrap"
},
{
    "key": "f9",
    "command": "editor.debug.action.toggleBreakpoint",
    "when": "debuggersAvailable && editorTextFocus"
},
{
    "key": "alt+f10",
    "command": "keybindings.editor.recordSearchKeys",
    "when": "inKeybindings && inKeybindingsSearch"
},
{
    "key": "alt+f",
    "command": "editor.action.formatSelection",
    "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
},
{
    "key": "alt+d",
    "command": "workbench.action.gotoSymbol"
},
// -- Breadcrumbs
{
    "key": "ctrl+numpad7",
    "command": "breadcrumbs.toggle"
},
{
    "key": "ctrl+shift+;",
    "command": "breadcrumbs.focus",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
},
{
    "key": "alt+s",
    "command": "breadcrumbs.focusAndSelect",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
}
]
